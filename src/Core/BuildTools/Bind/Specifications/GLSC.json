{
  "Projects": {
    "Core": {
      "ExtensionName": "Core",
      "CategoryName": "Core",
      "Namespace": "",
      "IsRoot": true,
      "Enums": [
        {
          "Tokens": [
            {
              "Name": "CompressedRgbS3TCDxt1Ext",
              "NativeName": "COMPRESSED_RGB_S3TC_DXT1_EXT",
              "Value": "0x83F0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CompressedRgbaS3TCDxt1Ext",
              "NativeName": "COMPRESSED_RGBA_S3TC_DXT1_EXT",
              "Value": "0x83F1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CompressedRgbaS3TCDxt3Ext",
              "NativeName": "COMPRESSED_RGBA_S3TC_DXT3_EXT",
              "Value": "0x83F2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CompressedRgbaS3TCDxt5Ext",
              "NativeName": "COMPRESSED_RGBA_S3TC_DXT5_EXT",
              "Value": "0x83F3",
              "Doc": "",
              "Attributes": []
            }
          ],
          "Name": "ExtTextureCompressionS3tc",
          "NativeName": "EXT_texture_compression_s3tc",
          "Attributes": []
        },
        {
          "Tokens": [
            {
              "Name": "DepthComponent24Oes",
              "NativeName": "DEPTH_COMPONENT24_OES",
              "Value": "0x81A6",
              "Doc": "",
              "Attributes": []
            }
          ],
          "Name": "OesDepth24",
          "NativeName": "OES_depth24",
          "Attributes": []
        },
        {
          "Tokens": [
            {
              "Name": "DepthComponent32Oes",
              "NativeName": "DEPTH_COMPONENT32_OES",
              "Value": "0x81A7",
              "Doc": "",
              "Attributes": []
            }
          ],
          "Name": "OesDepth32",
          "NativeName": "OES_depth32",
          "Attributes": []
        },
        {
          "Tokens": [
            {
              "Name": "Rgb8Oes",
              "NativeName": "RGB8_OES",
              "Value": "0x8051",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgba8Oes",
              "NativeName": "RGBA8_OES",
              "Value": "0x8058",
              "Doc": "",
              "Attributes": []
            }
          ],
          "Name": "OesRgb8Rgba8",
          "NativeName": "OES_rgb8_rgba8",
          "Attributes": []
        },
        {
          "Tokens": [
            {
              "Name": "FragmentShaderDerivativeHintOes",
              "NativeName": "FRAGMENT_SHADER_DERIVATIVE_HINT_OES",
              "Value": "0x8B8B",
              "Doc": "",
              "Attributes": []
            }
          ],
          "Name": "OesStandardDerivatives",
          "NativeName": "OES_standard_derivatives",
          "Attributes": []
        },
        {
          "Tokens": [
            {
              "Name": "DepthBufferBit",
              "NativeName": "DEPTH_BUFFER_BIT",
              "Value": "0x00000100",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBufferBit",
              "NativeName": "STENCIL_BUFFER_BIT",
              "Value": "0x00000400",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ColorBufferBit",
              "NativeName": "COLOR_BUFFER_BIT",
              "Value": "0x00004000",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "False",
              "NativeName": "FALSE",
              "Value": "0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "True",
              "NativeName": "TRUE",
              "Value": "1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Points",
              "NativeName": "POINTS",
              "Value": "0x0000",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Lines",
              "NativeName": "LINES",
              "Value": "0x0001",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LineLoop",
              "NativeName": "LINE_LOOP",
              "Value": "0x0002",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LineStrip",
              "NativeName": "LINE_STRIP",
              "Value": "0x0003",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Triangles",
              "NativeName": "TRIANGLES",
              "Value": "0x0004",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TriangleStrip",
              "NativeName": "TRIANGLE_STRIP",
              "Value": "0x0005",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TriangleFan",
              "NativeName": "TRIANGLE_FAN",
              "Value": "0x0006",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Zero",
              "NativeName": "ZERO",
              "Value": "0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "One",
              "NativeName": "ONE",
              "Value": "1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SrcColor",
              "NativeName": "SRC_COLOR",
              "Value": "0x0300",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "OneMinusSrcColor",
              "NativeName": "ONE_MINUS_SRC_COLOR",
              "Value": "0x0301",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SrcAlpha",
              "NativeName": "SRC_ALPHA",
              "Value": "0x0302",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "OneMinusSrcAlpha",
              "NativeName": "ONE_MINUS_SRC_ALPHA",
              "Value": "0x0303",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DstAlpha",
              "NativeName": "DST_ALPHA",
              "Value": "0x0304",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "OneMinusDstAlpha",
              "NativeName": "ONE_MINUS_DST_ALPHA",
              "Value": "0x0305",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DstColor",
              "NativeName": "DST_COLOR",
              "Value": "0x0306",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "OneMinusDstColor",
              "NativeName": "ONE_MINUS_DST_COLOR",
              "Value": "0x0307",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SrcAlphaSaturate",
              "NativeName": "SRC_ALPHA_SATURATE",
              "Value": "0x0308",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FuncAdd",
              "NativeName": "FUNC_ADD",
              "Value": "0x8006",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendEquation",
              "NativeName": "BLEND_EQUATION",
              "Value": "0x8009",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendEquationRgb",
              "NativeName": "BLEND_EQUATION_RGB",
              "Value": "0x8009",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendEquationAlpha",
              "NativeName": "BLEND_EQUATION_ALPHA",
              "Value": "0x883D",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FuncSubtract",
              "NativeName": "FUNC_SUBTRACT",
              "Value": "0x800A",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FuncReverseSubtract",
              "NativeName": "FUNC_REVERSE_SUBTRACT",
              "Value": "0x800B",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendDstRgb",
              "NativeName": "BLEND_DST_RGB",
              "Value": "0x80C8",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendSrcRgb",
              "NativeName": "BLEND_SRC_RGB",
              "Value": "0x80C9",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendDstAlpha",
              "NativeName": "BLEND_DST_ALPHA",
              "Value": "0x80CA",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendSrcAlpha",
              "NativeName": "BLEND_SRC_ALPHA",
              "Value": "0x80CB",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ConstantColor",
              "NativeName": "CONSTANT_COLOR",
              "Value": "0x8001",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "OneMinusConstantColor",
              "NativeName": "ONE_MINUS_CONSTANT_COLOR",
              "Value": "0x8002",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ConstantAlpha",
              "NativeName": "CONSTANT_ALPHA",
              "Value": "0x8003",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "OneMinusConstantAlpha",
              "NativeName": "ONE_MINUS_CONSTANT_ALPHA",
              "Value": "0x8004",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BlendColor",
              "NativeName": "BLEND_COLOR",
              "Value": "0x8005",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ArrayBuffer",
              "NativeName": "ARRAY_BUFFER",
              "Value": "0x8892",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ElementArrayBuffer",
              "NativeName": "ELEMENT_ARRAY_BUFFER",
              "Value": "0x8893",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ArrayBufferBinding",
              "NativeName": "ARRAY_BUFFER_BINDING",
              "Value": "0x8894",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ElementArrayBufferBinding",
              "NativeName": "ELEMENT_ARRAY_BUFFER_BINDING",
              "Value": "0x8895",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StreamDraw",
              "NativeName": "STREAM_DRAW",
              "Value": "0x88E0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StaticDraw",
              "NativeName": "STATIC_DRAW",
              "Value": "0x88E4",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DynamicDraw",
              "NativeName": "DYNAMIC_DRAW",
              "Value": "0x88E8",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BufferSize",
              "NativeName": "BUFFER_SIZE",
              "Value": "0x8764",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "BufferUsage",
              "NativeName": "BUFFER_USAGE",
              "Value": "0x8765",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CurrentVertexAttrib",
              "NativeName": "CURRENT_VERTEX_ATTRIB",
              "Value": "0x8626",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Front",
              "NativeName": "FRONT",
              "Value": "0x0404",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Back",
              "NativeName": "BACK",
              "Value": "0x0405",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FrontAndBack",
              "NativeName": "FRONT_AND_BACK",
              "Value": "0x0408",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture2D",
              "NativeName": "TEXTURE_2D",
              "Value": "0x0DE1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CullFace",
              "NativeName": "CULL_FACE",
              "Value": "0x0B44",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Blend",
              "NativeName": "BLEND",
              "Value": "0x0BE2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Dither",
              "NativeName": "DITHER",
              "Value": "0x0BD0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilTest",
              "NativeName": "STENCIL_TEST",
              "Value": "0x0B90",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DepthTest",
              "NativeName": "DEPTH_TEST",
              "Value": "0x0B71",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ScissorTest",
              "NativeName": "SCISSOR_TEST",
              "Value": "0x0C11",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "PolygonOffsetFill",
              "NativeName": "POLYGON_OFFSET_FILL",
              "Value": "0x8037",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SampleAlphaToCoverage",
              "NativeName": "SAMPLE_ALPHA_TO_COVERAGE",
              "Value": "0x809E",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SampleCoverage",
              "NativeName": "SAMPLE_COVERAGE",
              "Value": "0x80A0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "NoError",
              "NativeName": "NO_ERROR",
              "Value": "0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "InvalidEnum",
              "NativeName": "INVALID_ENUM",
              "Value": "0x0500",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "InvalidValue",
              "NativeName": "INVALID_VALUE",
              "Value": "0x0501",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "InvalidOperation",
              "NativeName": "INVALID_OPERATION",
              "Value": "0x0502",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "OutOfMemory",
              "NativeName": "OUT_OF_MEMORY",
              "Value": "0x0505",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "InvalidFramebufferOperation",
              "NativeName": "INVALID_FRAMEBUFFER_OPERATION",
              "Value": "0x0506",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ContextLost",
              "NativeName": "CONTEXT_LOST",
              "Value": "0x0507",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CW",
              "NativeName": "CW",
              "Value": "0x0900",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Ccw",
              "NativeName": "CCW",
              "Value": "0x0901",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LineWidth",
              "NativeName": "LINE_WIDTH",
              "Value": "0x0B21",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "AliasedPointSizeRange",
              "NativeName": "ALIASED_POINT_SIZE_RANGE",
              "Value": "0x846D",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "AliasedLineWidthRange",
              "NativeName": "ALIASED_LINE_WIDTH_RANGE",
              "Value": "0x846E",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CullFaceMode",
              "NativeName": "CULL_FACE_MODE",
              "Value": "0x0B45",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FrontFace",
              "NativeName": "FRONT_FACE",
              "Value": "0x0B46",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DepthRange",
              "NativeName": "DEPTH_RANGE",
              "Value": "0x0B70",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DepthWritemask",
              "NativeName": "DEPTH_WRITEMASK",
              "Value": "0x0B72",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DepthClearValue",
              "NativeName": "DEPTH_CLEAR_VALUE",
              "Value": "0x0B73",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DepthFunc",
              "NativeName": "DEPTH_FUNC",
              "Value": "0x0B74",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilClearValue",
              "NativeName": "STENCIL_CLEAR_VALUE",
              "Value": "0x0B91",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilFunc",
              "NativeName": "STENCIL_FUNC",
              "Value": "0x0B92",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilFail",
              "NativeName": "STENCIL_FAIL",
              "Value": "0x0B94",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilPassDepthFail",
              "NativeName": "STENCIL_PASS_DEPTH_FAIL",
              "Value": "0x0B95",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilPassDepthPass",
              "NativeName": "STENCIL_PASS_DEPTH_PASS",
              "Value": "0x0B96",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilRef",
              "NativeName": "STENCIL_REF",
              "Value": "0x0B97",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilValueMask",
              "NativeName": "STENCIL_VALUE_MASK",
              "Value": "0x0B93",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilWritemask",
              "NativeName": "STENCIL_WRITEMASK",
              "Value": "0x0B98",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBackFunc",
              "NativeName": "STENCIL_BACK_FUNC",
              "Value": "0x8800",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBackFail",
              "NativeName": "STENCIL_BACK_FAIL",
              "Value": "0x8801",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBackPassDepthFail",
              "NativeName": "STENCIL_BACK_PASS_DEPTH_FAIL",
              "Value": "0x8802",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBackPassDepthPass",
              "NativeName": "STENCIL_BACK_PASS_DEPTH_PASS",
              "Value": "0x8803",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBackRef",
              "NativeName": "STENCIL_BACK_REF",
              "Value": "0x8CA3",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBackValueMask",
              "NativeName": "STENCIL_BACK_VALUE_MASK",
              "Value": "0x8CA4",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilBackWritemask",
              "NativeName": "STENCIL_BACK_WRITEMASK",
              "Value": "0x8CA5",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Viewport",
              "NativeName": "VIEWPORT",
              "Value": "0x0BA2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ScissorBox",
              "NativeName": "SCISSOR_BOX",
              "Value": "0x0C10",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ColorClearValue",
              "NativeName": "COLOR_CLEAR_VALUE",
              "Value": "0x0C22",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ColorWritemask",
              "NativeName": "COLOR_WRITEMASK",
              "Value": "0x0C23",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnpackAlignment",
              "NativeName": "UNPACK_ALIGNMENT",
              "Value": "0x0CF5",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "PackAlignment",
              "NativeName": "PACK_ALIGNMENT",
              "Value": "0x0D05",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxTextureSize",
              "NativeName": "MAX_TEXTURE_SIZE",
              "Value": "0x0D33",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxViewportDims",
              "NativeName": "MAX_VIEWPORT_DIMS",
              "Value": "0x0D3A",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SubpixelBits",
              "NativeName": "SUBPIXEL_BITS",
              "Value": "0x0D50",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RedBits",
              "NativeName": "RED_BITS",
              "Value": "0x0D52",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "GreenBits",
              "NativeName": "GREEN_BITS",
              "Value": "0x0D53",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "BlueBits",
              "NativeName": "BLUE_BITS",
              "Value": "0x0D54",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "AlphaBits",
              "NativeName": "ALPHA_BITS",
              "Value": "0x0D55",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "DepthBits",
              "NativeName": "DEPTH_BITS",
              "Value": "0x0D56",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "StencilBits",
              "NativeName": "STENCIL_BITS",
              "Value": "0x0D57",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "PolygonOffsetUnits",
              "NativeName": "POLYGON_OFFSET_UNITS",
              "Value": "0x2A00",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "PolygonOffsetFactor",
              "NativeName": "POLYGON_OFFSET_FACTOR",
              "Value": "0x8038",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TextureBinding2D",
              "NativeName": "TEXTURE_BINDING_2D",
              "Value": "0x8069",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SampleBuffers",
              "NativeName": "SAMPLE_BUFFERS",
              "Value": "0x80A8",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Samples",
              "NativeName": "SAMPLES",
              "Value": "0x80A9",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SampleCoverageValue",
              "NativeName": "SAMPLE_COVERAGE_VALUE",
              "Value": "0x80AA",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "SampleCoverageInvert",
              "NativeName": "SAMPLE_COVERAGE_INVERT",
              "Value": "0x80AB",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "NumCompressedTextureFormats",
              "NativeName": "NUM_COMPRESSED_TEXTURE_FORMATS",
              "Value": "0x86A2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CompressedTextureFormats",
              "NativeName": "COMPRESSED_TEXTURE_FORMATS",
              "Value": "0x86A3",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DontCare",
              "NativeName": "DONT_CARE",
              "Value": "0x1100",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Fastest",
              "NativeName": "FASTEST",
              "Value": "0x1101",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Nicest",
              "NativeName": "NICEST",
              "Value": "0x1102",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "GenerateMipmapHint",
              "NativeName": "GENERATE_MIPMAP_HINT",
              "Value": "0x8192",
              "Doc": "",
              "Attributes": [
                {
                  "Name": "Obsolete",
                  "Arguments": [
                    "\"Deprecated in 3.2.\""
                  ]
                }
              ]
            },
            {
              "Name": "Byte",
              "NativeName": "BYTE",
              "Value": "0x1400",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnsignedByte",
              "NativeName": "UNSIGNED_BYTE",
              "Value": "0x1401",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Short",
              "NativeName": "SHORT",
              "Value": "0x1402",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnsignedShort",
              "NativeName": "UNSIGNED_SHORT",
              "Value": "0x1403",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Int",
              "NativeName": "INT",
              "Value": "0x1404",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnsignedInt",
              "NativeName": "UNSIGNED_INT",
              "Value": "0x1405",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Float",
              "NativeName": "FLOAT",
              "Value": "0x1406",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Red",
              "NativeName": "RED",
              "Value": "0x1903",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RG",
              "NativeName": "RG",
              "Value": "0x8227",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgb",
              "NativeName": "RGB",
              "Value": "0x1907",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgba",
              "NativeName": "RGBA",
              "Value": "0x1908",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnsignedShort4444",
              "NativeName": "UNSIGNED_SHORT_4_4_4_4",
              "Value": "0x8033",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnsignedShort5551",
              "NativeName": "UNSIGNED_SHORT_5_5_5_1",
              "Value": "0x8034",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnsignedShort565",
              "NativeName": "UNSIGNED_SHORT_5_6_5",
              "Value": "0x8363",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxVertexAttribs",
              "NativeName": "MAX_VERTEX_ATTRIBS",
              "Value": "0x8869",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxVertexUniformVectors",
              "NativeName": "MAX_VERTEX_UNIFORM_VECTORS",
              "Value": "0x8DFB",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxVaryingVectors",
              "NativeName": "MAX_VARYING_VECTORS",
              "Value": "0x8DFC",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxCombinedTextureImageUnits",
              "NativeName": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
              "Value": "0x8B4D",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxVertexTextureImageUnits",
              "NativeName": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
              "Value": "0x8B4C",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxTextureImageUnits",
              "NativeName": "MAX_TEXTURE_IMAGE_UNITS",
              "Value": "0x8872",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxFragmentUniformVectors",
              "NativeName": "MAX_FRAGMENT_UNIFORM_VECTORS",
              "Value": "0x8DFD",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LinkStatus",
              "NativeName": "LINK_STATUS",
              "Value": "0x8B82",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ShadingLanguageVersion",
              "NativeName": "SHADING_LANGUAGE_VERSION",
              "Value": "0x8B8C",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "CurrentProgram",
              "NativeName": "CURRENT_PROGRAM",
              "Value": "0x8B8D",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Never",
              "NativeName": "NEVER",
              "Value": "0x0200",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Less",
              "NativeName": "LESS",
              "Value": "0x0201",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Equal",
              "NativeName": "EQUAL",
              "Value": "0x0202",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Lequal",
              "NativeName": "LEQUAL",
              "Value": "0x0203",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Greater",
              "NativeName": "GREATER",
              "Value": "0x0204",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Notequal",
              "NativeName": "NOTEQUAL",
              "Value": "0x0205",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Gequal",
              "NativeName": "GEQUAL",
              "Value": "0x0206",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Always",
              "NativeName": "ALWAYS",
              "Value": "0x0207",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Keep",
              "NativeName": "KEEP",
              "Value": "0x1E00",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Replace",
              "NativeName": "REPLACE",
              "Value": "0x1E01",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Incr",
              "NativeName": "INCR",
              "Value": "0x1E02",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Decr",
              "NativeName": "DECR",
              "Value": "0x1E03",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Invert",
              "NativeName": "INVERT",
              "Value": "0x150A",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "IncrWrap",
              "NativeName": "INCR_WRAP",
              "Value": "0x8507",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DecrWrap",
              "NativeName": "DECR_WRAP",
              "Value": "0x8508",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Vendor",
              "NativeName": "VENDOR",
              "Value": "0x1F00",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Renderer",
              "NativeName": "RENDERER",
              "Value": "0x1F01",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Version",
              "NativeName": "VERSION",
              "Value": "0x1F02",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Extensions",
              "NativeName": "EXTENSIONS",
              "Value": "0x1F03",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Nearest",
              "NativeName": "NEAREST",
              "Value": "0x2600",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Linear",
              "NativeName": "LINEAR",
              "Value": "0x2601",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "NearestMipmapNearest",
              "NativeName": "NEAREST_MIPMAP_NEAREST",
              "Value": "0x2700",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LinearMipmapNearest",
              "NativeName": "LINEAR_MIPMAP_NEAREST",
              "Value": "0x2701",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "NearestMipmapLinear",
              "NativeName": "NEAREST_MIPMAP_LINEAR",
              "Value": "0x2702",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LinearMipmapLinear",
              "NativeName": "LINEAR_MIPMAP_LINEAR",
              "Value": "0x2703",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TextureMagFilter",
              "NativeName": "TEXTURE_MAG_FILTER",
              "Value": "0x2800",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TextureMinFilter",
              "NativeName": "TEXTURE_MIN_FILTER",
              "Value": "0x2801",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TextureWrapS",
              "NativeName": "TEXTURE_WRAP_S",
              "Value": "0x2802",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TextureWrapT",
              "NativeName": "TEXTURE_WRAP_T",
              "Value": "0x2803",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "TextureImmutableFormat",
              "NativeName": "TEXTURE_IMMUTABLE_FORMAT",
              "Value": "0x912F",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture",
              "NativeName": "TEXTURE",
              "Value": "0x1702",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture0",
              "NativeName": "TEXTURE0",
              "Value": "0x84C0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture1",
              "NativeName": "TEXTURE1",
              "Value": "0x84C1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture2",
              "NativeName": "TEXTURE2",
              "Value": "0x84C2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture3",
              "NativeName": "TEXTURE3",
              "Value": "0x84C3",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture4",
              "NativeName": "TEXTURE4",
              "Value": "0x84C4",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture5",
              "NativeName": "TEXTURE5",
              "Value": "0x84C5",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture6",
              "NativeName": "TEXTURE6",
              "Value": "0x84C6",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture7",
              "NativeName": "TEXTURE7",
              "Value": "0x84C7",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture8",
              "NativeName": "TEXTURE8",
              "Value": "0x84C8",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture9",
              "NativeName": "TEXTURE9",
              "Value": "0x84C9",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture10",
              "NativeName": "TEXTURE10",
              "Value": "0x84CA",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture11",
              "NativeName": "TEXTURE11",
              "Value": "0x84CB",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture12",
              "NativeName": "TEXTURE12",
              "Value": "0x84CC",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture13",
              "NativeName": "TEXTURE13",
              "Value": "0x84CD",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture14",
              "NativeName": "TEXTURE14",
              "Value": "0x84CE",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture15",
              "NativeName": "TEXTURE15",
              "Value": "0x84CF",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture16",
              "NativeName": "TEXTURE16",
              "Value": "0x84D0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture17",
              "NativeName": "TEXTURE17",
              "Value": "0x84D1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture18",
              "NativeName": "TEXTURE18",
              "Value": "0x84D2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture19",
              "NativeName": "TEXTURE19",
              "Value": "0x84D3",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture20",
              "NativeName": "TEXTURE20",
              "Value": "0x84D4",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture21",
              "NativeName": "TEXTURE21",
              "Value": "0x84D5",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture22",
              "NativeName": "TEXTURE22",
              "Value": "0x84D6",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture23",
              "NativeName": "TEXTURE23",
              "Value": "0x84D7",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture24",
              "NativeName": "TEXTURE24",
              "Value": "0x84D8",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture25",
              "NativeName": "TEXTURE25",
              "Value": "0x84D9",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture26",
              "NativeName": "TEXTURE26",
              "Value": "0x84DA",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture27",
              "NativeName": "TEXTURE27",
              "Value": "0x84DB",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture28",
              "NativeName": "TEXTURE28",
              "Value": "0x84DC",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture29",
              "NativeName": "TEXTURE29",
              "Value": "0x84DD",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture30",
              "NativeName": "TEXTURE30",
              "Value": "0x84DE",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Texture31",
              "NativeName": "TEXTURE31",
              "Value": "0x84DF",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ActiveTexture",
              "NativeName": "ACTIVE_TEXTURE",
              "Value": "0x84E0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Repeat",
              "NativeName": "REPEAT",
              "Value": "0x2901",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ClampToEdge",
              "NativeName": "CLAMP_TO_EDGE",
              "Value": "0x812F",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MirroredRepeat",
              "NativeName": "MIRRORED_REPEAT",
              "Value": "0x8370",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Sampler2D",
              "NativeName": "SAMPLER_2D",
              "Value": "0x8B5E",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "VertexAttribArrayEnabled",
              "NativeName": "VERTEX_ATTRIB_ARRAY_ENABLED",
              "Value": "0x8622",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "VertexAttribArraySize",
              "NativeName": "VERTEX_ATTRIB_ARRAY_SIZE",
              "Value": "0x8623",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "VertexAttribArrayStride",
              "NativeName": "VERTEX_ATTRIB_ARRAY_STRIDE",
              "Value": "0x8624",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "VertexAttribArrayType",
              "NativeName": "VERTEX_ATTRIB_ARRAY_TYPE",
              "Value": "0x8625",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "VertexAttribArrayNormalized",
              "NativeName": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
              "Value": "0x886A",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "VertexAttribArrayPointer",
              "NativeName": "VERTEX_ATTRIB_ARRAY_POINTER",
              "Value": "0x8645",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "VertexAttribArrayBufferBinding",
              "NativeName": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
              "Value": "0x889F",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ImplementationColorReadType",
              "NativeName": "IMPLEMENTATION_COLOR_READ_TYPE",
              "Value": "0x8B9A",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ImplementationColorReadFormat",
              "NativeName": "IMPLEMENTATION_COLOR_READ_FORMAT",
              "Value": "0x8B9B",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "NumProgramBinaryFormats",
              "NativeName": "NUM_PROGRAM_BINARY_FORMATS",
              "Value": "0x87FE",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ProgramBinaryFormats",
              "NativeName": "PROGRAM_BINARY_FORMATS",
              "Value": "0x87FF",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LowFloat",
              "NativeName": "LOW_FLOAT",
              "Value": "0x8DF0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MediumFloat",
              "NativeName": "MEDIUM_FLOAT",
              "Value": "0x8DF1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "HighFloat",
              "NativeName": "HIGH_FLOAT",
              "Value": "0x8DF2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LowInt",
              "NativeName": "LOW_INT",
              "Value": "0x8DF3",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MediumInt",
              "NativeName": "MEDIUM_INT",
              "Value": "0x8DF4",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "HighInt",
              "NativeName": "HIGH_INT",
              "Value": "0x8DF5",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Framebuffer",
              "NativeName": "FRAMEBUFFER",
              "Value": "0x8D40",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Renderbuffer",
              "NativeName": "RENDERBUFFER",
              "Value": "0x8D41",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "R8",
              "NativeName": "R8",
              "Value": "0x8229",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RG8",
              "NativeName": "RG8",
              "Value": "0x822B",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgb8",
              "NativeName": "RGB8",
              "Value": "0x8051",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgba8",
              "NativeName": "RGBA8",
              "Value": "0x8058",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgba4",
              "NativeName": "RGBA4",
              "Value": "0x8056",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgb5A1",
              "NativeName": "RGB5_A1",
              "Value": "0x8057",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "Rgb565",
              "NativeName": "RGB565",
              "Value": "0x8D62",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DepthComponent16",
              "NativeName": "DEPTH_COMPONENT16",
              "Value": "0x81A5",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilIndex8",
              "NativeName": "STENCIL_INDEX8",
              "Value": "0x8D48",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferWidth",
              "NativeName": "RENDERBUFFER_WIDTH",
              "Value": "0x8D42",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferHeight",
              "NativeName": "RENDERBUFFER_HEIGHT",
              "Value": "0x8D43",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferInternalFormat",
              "NativeName": "RENDERBUFFER_INTERNAL_FORMAT",
              "Value": "0x8D44",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferRedSize",
              "NativeName": "RENDERBUFFER_RED_SIZE",
              "Value": "0x8D50",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferGreenSize",
              "NativeName": "RENDERBUFFER_GREEN_SIZE",
              "Value": "0x8D51",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferBlueSize",
              "NativeName": "RENDERBUFFER_BLUE_SIZE",
              "Value": "0x8D52",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferAlphaSize",
              "NativeName": "RENDERBUFFER_ALPHA_SIZE",
              "Value": "0x8D53",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferDepthSize",
              "NativeName": "RENDERBUFFER_DEPTH_SIZE",
              "Value": "0x8D54",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferStencilSize",
              "NativeName": "RENDERBUFFER_STENCIL_SIZE",
              "Value": "0x8D55",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferAttachmentObjectType",
              "NativeName": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
              "Value": "0x8CD0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferAttachmentObjectName",
              "NativeName": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
              "Value": "0x8CD1",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferAttachmentTextureLevel",
              "NativeName": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
              "Value": "0x8CD2",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ColorAttachment0",
              "NativeName": "COLOR_ATTACHMENT0",
              "Value": "0x8CE0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "DepthAttachment",
              "NativeName": "DEPTH_ATTACHMENT",
              "Value": "0x8D00",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "StencilAttachment",
              "NativeName": "STENCIL_ATTACHMENT",
              "Value": "0x8D20",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "None",
              "NativeName": "NONE",
              "Value": "0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferComplete",
              "NativeName": "FRAMEBUFFER_COMPLETE",
              "Value": "0x8CD5",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferIncompleteAttachment",
              "NativeName": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
              "Value": "0x8CD6",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferIncompleteMissingAttachment",
              "NativeName": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
              "Value": "0x8CD7",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferIncompleteDimensions",
              "NativeName": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
              "Value": "0x8CD9",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferUnsupported",
              "NativeName": "FRAMEBUFFER_UNSUPPORTED",
              "Value": "0x8CDD",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferUndefined",
              "NativeName": "FRAMEBUFFER_UNDEFINED",
              "Value": "0x8219",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "FramebufferBinding",
              "NativeName": "FRAMEBUFFER_BINDING",
              "Value": "0x8CA6",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "RenderbufferBinding",
              "NativeName": "RENDERBUFFER_BINDING",
              "Value": "0x8CA7",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "MaxRenderbufferSize",
              "NativeName": "MAX_RENDERBUFFER_SIZE",
              "Value": "0x84E8",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "NoError",
              "NativeName": "NO_ERROR",
              "Value": "0",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "GuiltyContextReset",
              "NativeName": "GUILTY_CONTEXT_RESET",
              "Value": "0x8253",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "InnocentContextReset",
              "NativeName": "INNOCENT_CONTEXT_RESET",
              "Value": "0x8254",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "UnknownContextReset",
              "NativeName": "UNKNOWN_CONTEXT_RESET",
              "Value": "0x8255",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ContextRobustAccess",
              "NativeName": "CONTEXT_ROBUST_ACCESS",
              "Value": "0x90F3",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "ResetNotificationStrategy",
              "NativeName": "RESET_NOTIFICATION_STRATEGY",
              "Value": "0x8256",
              "Doc": "",
              "Attributes": []
            },
            {
              "Name": "LoseContextOnReset",
              "NativeName": "LOSE_CONTEXT_ON_RESET",
              "Value": "0x8252",
              "Doc": "",
              "Attributes": []
            }
          ],
          "Name": "SCVersion20",
          "NativeName": "SC_VERSION_2_0",
          "Attributes": []
        }
      ],
      "Interfaces": {
        "SC_VERSION_2_0": {
          "Name": "ISCVersion20",
          "Functions": [
            {
              "Name": "ActiveTexture",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "ActiveTexture",
              "Parameters": [
                {
                  "Name": "texture",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureUnit"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Select active texture unit.\r\n/// </summary>\r\n/// <param name=\"texture\">\r\n/// Specifies which texture unit to make active. The number of texture units is implementation\n/// dependent, but must be at least 8. texture must be one of GL_TEXTUREi, where i ranges from 0 to\n/// (GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1). The initial value is GL_TEXTURE0.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BindBuffer",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BindBuffer",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BufferTargetARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "buffer",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Bind a named buffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target to which the buffer object is bound. The symbolic constant must be\n/// GL_ARRAY_BUFFER or GL_ELEMENT_ARRAY_BUFFER.\r\n/// </param>\r\n/// <param name=\"buffer\">\r\n/// Specifies the name of a buffer object.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BindFramebuffer",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BindFramebuffer",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "framebuffer",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Bind a named framebuffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target to which the framebuffer object is bound. The symbolic constant must be\n/// GL_FRAMEBUFFER.\r\n/// </param>\r\n/// <param name=\"framebuffer\">\r\n/// Specifies the name of a framebuffer object.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BindRenderbuffer",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BindRenderbuffer",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "RenderbufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "renderbuffer",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Bind a named renderbuffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target to which the renderbuffer object is bound. The symbolic constant must be\n/// GL_RENDERBUFFER.\r\n/// </param>\r\n/// <param name=\"renderbuffer\">\r\n/// Specifies the name of a renderbuffer object.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BindTexture",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BindTexture",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "texture",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Bind a named texture to a texturing target.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target of the active texture unit to which the texture is bound. Must be either\n/// GL_TEXTURE_2D or GL_TEXTURE_CUBE_MAP.\r\n/// </param>\r\n/// <param name=\"texture\">\r\n/// Specifies the name of a texture.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BlendColor",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BlendColor",
              "Parameters": [
                {
                  "Name": "red",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "green",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "blue",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "alpha",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set the blend color.\r\n/// </summary>\r\n/// <param name=\"red\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"green\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"blue\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"alpha\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BlendEquation",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BlendEquation",
              "Parameters": [
                {
                  "Name": "mode",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendEquationModeEXT"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify the equation used for both the RGB blend equation and the Alpha blend equation.\r\n/// </summary>\r\n/// <param name=\"mode\">\r\n/// specifies how source and destination colors are combined. It must be GL_FUNC_ADD, GL_FUNC_SUBTRACT,\n/// or GL_FUNC_REVERSE_SUBTRACT.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BlendEquationSeparate",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BlendEquationSeparate",
              "Parameters": [
                {
                  "Name": "modeRGB",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendEquationModeEXT"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "modeAlpha",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendEquationModeEXT"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set the RGB blend equation and the alpha blend equation separately.\r\n/// </summary>\r\n/// <param name=\"modeRGB\">\r\n/// specifies the RGB blend equation, how the red, green, and blue components of the source and\n/// destination colors are combined. It must be GL_FUNC_ADD, GL_FUNC_SUBTRACT, or\n/// GL_FUNC_REVERSE_SUBTRACT.\r\n/// </param>\r\n/// <param name=\"modeAlpha\">\r\n/// specifies the alpha blend equation, how the alpha component of the source and destination colors are\n/// combined. It must be GL_FUNC_ADD, GL_FUNC_SUBTRACT, or GL_FUNC_REVERSE_SUBTRACT.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BlendFunc",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BlendFunc",
              "Parameters": [
                {
                  "Name": "sfactor",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendingFactor"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "dfactor",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendingFactor"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify pixel arithmetic.\r\n/// </summary>\r\n/// <param name=\"sfactor\">\r\n/// Specifies how the red, green, blue, and alpha source blending factors are computed. The following\n/// symbolic constants are accepted: GL_ZERO, GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR,\n/// GL_DST_COLOR, GL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_DST_ALPHA,\n/// GL_ONE_MINUS_DST_ALPHA, GL_CONSTANT_COLOR, GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA,\n/// GL_ONE_MINUS_CONSTANT_ALPHA, and GL_SRC_ALPHA_SATURATE. The initial value is GL_ONE.\r\n/// </param>\r\n/// <param name=\"dfactor\">\r\n/// Specifies how the red, green, blue, and alpha destination blending factors are computed. The\n/// following symbolic constants are accepted: GL_ZERO, GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR,\n/// GL_DST_COLOR, GL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_DST_ALPHA,\n/// GL_ONE_MINUS_DST_ALPHA. GL_CONSTANT_COLOR, GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA, and\n/// GL_ONE_MINUS_CONSTANT_ALPHA. The initial value is GL_ZERO.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BlendFuncSeparate",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BlendFuncSeparate",
              "Parameters": [
                {
                  "Name": "sfactorRGB",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendingFactor"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "dfactorRGB",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendingFactor"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "sfactorAlpha",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendingFactor"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "dfactorAlpha",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BlendingFactor"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify pixel arithmetic for RGB and alpha components separately.\r\n/// </summary>\r\n/// <param name=\"sfactorRGB\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"dfactorRGB\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"sfactorAlpha\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"dfactorAlpha\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BufferData",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BufferData",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BufferTargetARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "size",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "UIntPtr"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "data",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                },
                {
                  "Name": "usage",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BufferUsageARB"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Create and initialize a buffer object's data store.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER or\n/// GL_ELEMENT_ARRAY_BUFFER.\r\n/// </param>\r\n/// <param name=\"size\">\r\n/// Specifies the size in bytes of the buffer object's new data store.\r\n/// </param>\r\n/// <param name=\"data\">\r\n/// Specifies a pointer to data that will be copied into the data store for initialization, or NULL if\n/// no data is to be copied.\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n/// <param name=\"usage\">\r\n/// Specifies the expected usage pattern of the data store. The symbolic constant must be\n/// GL_STREAM_DRAW, GL_STATIC_DRAW, or GL_DYNAMIC_DRAW.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "BufferSubData",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "BufferSubData",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BufferTargetARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "offset",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "IntPtr"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "size",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "UIntPtr"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "data",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Update a subset of a buffer object's data store.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER or\n/// GL_ELEMENT_ARRAY_BUFFER.\r\n/// </param>\r\n/// <param name=\"offset\">\r\n/// Specifies the offset into the buffer object's data store where data replacement will begin, measured\n/// in bytes.\r\n/// </param>\r\n/// <param name=\"size\">\r\n/// Specifies the size in bytes of the data store region being replaced.\r\n/// </param>\r\n/// <param name=\"data\">\r\n/// Specifies a pointer to the new data that will be copied into the data store.\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "CheckFramebufferStatus",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "FramebufferStatus"
              },
              "NativeName": "CheckFramebufferStatus",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return the framebuffer completeness status of a framebuffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target framebuffer object. The symbolic constant must be GL_FRAMEBUFFER.\r\n/// </param>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Clear",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Clear",
              "Parameters": [
                {
                  "Name": "mask",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "ClearBufferMask"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Clear buffers to preset values.\r\n/// </summary>\r\n/// <param name=\"mask\">\r\n/// Bitwise OR of masks that indicate the buffers to be cleared. The three masks are\n/// GL_COLOR_BUFFER_BIT, GL_DEPTH_BUFFER_BIT, and GL_STENCIL_BUFFER_BIT.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "ClearColor",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "ClearColor",
              "Parameters": [
                {
                  "Name": "red",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "green",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "blue",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "alpha",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify clear values for the color buffers.\r\n/// </summary>\r\n/// <param name=\"red\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"green\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"blue\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"alpha\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "ClearDepthf",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "ClearDepthf",
              "Parameters": [
                {
                  "Name": "d",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify the clear value for the depth buffer.\r\n/// </summary>\r\n/// <param name=\"d\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "ClearStencil",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "ClearStencil",
              "Parameters": [
                {
                  "Name": "s",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify the clear value for the stencil buffer.\r\n/// </summary>\r\n/// <param name=\"s\">\r\n/// Specifies the index used when the stencil buffer is cleared. The initial value is 0.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "ColorMask",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "ColorMask",
              "Parameters": [
                {
                  "Name": "red",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "green",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "blue",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "alpha",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Enable and disable writing of frame buffer color components.\r\n/// </summary>\r\n/// <param name=\"red\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"green\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"blue\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"alpha\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "CompressedTexSubImage2D",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "CompressedTexSubImage2D",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "level",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "xoffset",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "yoffset",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "height",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "format",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PixelFormat"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "imageSize",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "data",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void*"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify a two-dimensional texture subimage in a compressed format.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target texture of the active texture unit. Must be GL_TEXTURE_2D,\n/// GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y,\n/// GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.\r\n/// </param>\r\n/// <param name=\"level\">\r\n/// Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap\n/// reduction image.\r\n/// </param>\r\n/// <param name=\"xoffset\">\r\n/// Specifies a texel offset in the x direction within the texture array.\r\n/// </param>\r\n/// <param name=\"yoffset\">\r\n/// Specifies a texel offset in the y direction within the texture array.\r\n/// </param>\r\n/// <param name=\"width\">\r\n/// Specifies the width of the texture subimage.\r\n/// </param>\r\n/// <param name=\"height\">\r\n/// Specifies the height of the texture subimage.\r\n/// </param>\r\n/// <param name=\"format\">\r\n/// Specifies the format of the compressed image data stored at address data.\r\n/// </param>\r\n/// <param name=\"imageSize\">\r\n/// Specifies the number of unsigned bytes of image data starting at the address specified by data.\r\n/// </param>\r\n/// <param name=\"data\">\r\n/// Specifies a pointer to the compressed image data in memory.\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "CreateProgram",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "uint"
              },
              "NativeName": "CreateProgram",
              "Parameters": [],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Create a program object.\r\n/// </summary>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "CullFace",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "CullFace",
              "Parameters": [
                {
                  "Name": "mode",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "CullFaceMode"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify whether front- or back-facing polygons can be culled.\r\n/// </summary>\r\n/// <param name=\"mode\">\r\n/// Specifies whether front- or back-facing polygons are candidates for culling. Symbolic constants\n/// GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK are accepted. The initial value is GL_BACK.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "DepthFunc",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "DepthFunc",
              "Parameters": [
                {
                  "Name": "func",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "DepthFunction"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify the value used for depth buffer comparisons.\r\n/// </summary>\r\n/// <param name=\"func\">\r\n/// Specifies the depth comparison function. Symbolic constants GL_NEVER, GL_LESS, GL_EQUAL, GL_LEQUAL,\n/// GL_GREATER, GL_NOTEQUAL, GL_GEQUAL, and GL_ALWAYS are accepted. The initial value is GL_LESS.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "DepthMask",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "DepthMask",
              "Parameters": [
                {
                  "Name": "flag",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Enable or disable writing into the depth buffer.\r\n/// </summary>\r\n/// <param name=\"flag\">\r\n/// Specifies whether the depth buffer is enabled for writing. If flag is GL_FALSE, depth buffer writing\n/// is disabled. Otherwise, it is enabled. Initially, depth buffer writing is enabled.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "DepthRangef",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "DepthRangef",
              "Parameters": [
                {
                  "Name": "n",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "f",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify mapping of depth values from normalized device coordinates to window coordinates.\r\n/// </summary>\r\n/// <param name=\"n\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"f\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Disable",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Disable",
              "Parameters": [
                {
                  "Name": "cap",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "EnableCap"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Enable or disable server-side GL capabilities.\r\n/// </summary>\r\n/// <param name=\"cap\">\r\n/// Specifies a symbolic constant indicating a GL capability.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "DisableVertexAttribArray",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "DisableVertexAttribArray",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Enable or disable a generic vertex attribute array.\r\n/// </summary>\r\n/// <param name=\"index\">\r\n/// Specifies the index of the generic vertex attribute to be enabled or disabled.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "DrawArrays",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "DrawArrays",
              "Parameters": [
                {
                  "Name": "mode",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PrimitiveType"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "first",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Render primitives from array data.\r\n/// </summary>\r\n/// <param name=\"mode\">\r\n/// Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP,\n/// GL_LINE_LOOP, GL_LINES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, and GL_TRIANGLES are accepted.\r\n/// </param>\r\n/// <param name=\"first\">\r\n/// Specifies the starting index in the enabled arrays.\r\n/// </param>\r\n/// <param name=\"count\">\r\n/// Specifies the number of indices to be rendered.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "DrawRangeElements",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "DrawRangeElements",
              "Parameters": [
                {
                  "Name": "mode",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PrimitiveType"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "start",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "end",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "type",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "DrawElementsType"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "indices",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "count",
                      "type"
                    ]
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"mode\">To be added.</param>\r\n/// <param name=\"start\">To be added.</param>\r\n/// <param name=\"end\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"type\">To be added.</param>\r\n/// <param name=\"indices\">To be added.</param>\r\n/// This parameter's element count is computed from count and type.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Enable",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Enable",
              "Parameters": [
                {
                  "Name": "cap",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "EnableCap"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Enable or disable server-side GL capabilities.\r\n/// </summary>\r\n/// <param name=\"cap\">\r\n/// Specifies a symbolic constant indicating a GL capability.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "EnableVertexAttribArray",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "EnableVertexAttribArray",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Enable or disable a generic vertex attribute array.\r\n/// </summary>\r\n/// <param name=\"index\">\r\n/// Specifies the index of the generic vertex attribute to be enabled or disabled.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Finish",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Finish",
              "Parameters": [],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Block until all GL execution is complete.\r\n/// </summary>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Flush",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Flush",
              "Parameters": [],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Force execution of GL commands in finite time.\r\n/// </summary>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "FramebufferRenderbuffer",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "FramebufferRenderbuffer",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "attachment",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferAttachment"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "renderbuffertarget",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "RenderbufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "renderbuffer",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Attach a renderbuffer object to a framebuffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the framebuffer target. The symbolic constant must be GL_FRAMEBUFFER.\r\n/// </param>\r\n/// <param name=\"attachment\">\r\n/// Specifies the attachment point to which renderbuffer should be attached. Must be one of the\n/// following symbolic constants: GL_COLOR_ATTACHMENT0, GL_DEPTH_ATTACHMENT, or GL_STENCIL_ATTACHMENT.\r\n/// </param>\r\n/// <param name=\"renderbuffertarget\">\r\n/// Specifies the renderbuffer target. The symbolic constant must be GL_RENDERBUFFER.\r\n/// </param>\r\n/// <param name=\"renderbuffer\">\r\n/// Specifies the renderbuffer object that is to be attached.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "FramebufferTexture2D",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "FramebufferTexture2D",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "attachment",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferAttachment"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "textarget",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "texture",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "level",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Attach a texture image to a framebuffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the framebuffer target. The symbolic constant must be GL_FRAMEBUFFER.\r\n/// </param>\r\n/// <param name=\"attachment\">\r\n/// Specifies the attachment point to which an image from texture should be attached. Must be one of the\n/// following symbolic constants: GL_COLOR_ATTACHMENT0, GL_DEPTH_ATTACHMENT, or GL_STENCIL_ATTACHMENT.\r\n/// </param>\r\n/// <param name=\"textarget\">\r\n/// Specifies the texture target. Must be one of the following symbolic constants: GL_TEXTURE_2D,\n/// GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y,\n/// GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.\r\n/// </param>\r\n/// <param name=\"texture\">\r\n/// Specifies the texture object whose image is to be attached.\r\n/// </param>\r\n/// <param name=\"level\">\r\n/// Specifies the mipmap level of the texture image to be attached, which must be 0.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "FrontFace",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "FrontFace",
              "Parameters": [
                {
                  "Name": "mode",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FrontFaceDirection"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Define front- and back-facing polygons.\r\n/// </summary>\r\n/// <param name=\"mode\">\r\n/// Specifies the orientation of front-facing polygons. GL_CW and GL_CCW are accepted. The initial value\n/// is GL_CCW.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GenBuffers",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GenBuffers",
              "Parameters": [
                {
                  "Name": "n",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "buffers",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Generate buffer object names.\r\n/// </summary>\r\n/// <param name=\"n\">\r\n/// Specifies the number of buffer object names to be generated.\r\n/// </param>\r\n/// <param name=\"buffers\">\r\n/// Specifies an array in which the generated buffer object names are stored.\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GenerateMipmap",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GenerateMipmap",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Generate a complete set of mipmaps for a texture object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the texture target of the active texture unit to which the texture object is bound whose\n/// mipmaps will be generated. Must be one of the following symbolic constants: GL_TEXTURE_2D or\n/// GL_TEXTURE_CUBE_MAP.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GenFramebuffers",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GenFramebuffers",
              "Parameters": [
                {
                  "Name": "n",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "framebuffers",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Generate framebuffer object names.\r\n/// </summary>\r\n/// <param name=\"n\">\r\n/// Specifies the number of framebuffer object names to be generated.\r\n/// </param>\r\n/// <param name=\"framebuffers\">\r\n/// Specifies an array in which the generated framebuffer object names are stored.\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GenRenderbuffers",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GenRenderbuffers",
              "Parameters": [
                {
                  "Name": "n",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "renderbuffers",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Generate renderbuffer object names.\r\n/// </summary>\r\n/// <param name=\"n\">\r\n/// Specifies the number of renderbuffer object names to be generated.\r\n/// </param>\r\n/// <param name=\"renderbuffers\">\r\n/// Specifies an array in which the generated renderbuffer object names are stored.\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GenTextures",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GenTextures",
              "Parameters": [
                {
                  "Name": "n",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "textures",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Generate texture names.\r\n/// </summary>\r\n/// <param name=\"n\">\r\n/// Specifies the number of texture names to be generated.\r\n/// </param>\r\n/// <param name=\"textures\">\r\n/// Specifies an array in which the generated texture names are stored.\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetAttribLocation",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "int"
              },
              "NativeName": "GetAttribLocation",
              "Parameters": [
                {
                  "Name": "program",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "name",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "char"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return the location of an attribute variable.\r\n/// </summary>\r\n/// <param name=\"program\">\r\n/// Specifies the program object to be queried.\r\n/// </param>\r\n/// <param name=\"name\">\r\n/// Points to a null terminated string containing the name of the attribute variable whose location is\n/// to be queried.\r\n/// </param>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetBooleanv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetBooleanv",
              "Parameters": [
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "GetPName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "data",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"data\">To be added.</param>\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetBufferParameteriv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetBufferParameteriv",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BufferTargetARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "BufferPNameARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return parameters of a buffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER or\n/// GL_ELEMENT_ARRAY_BUFFER.\r\n/// </param>\r\n/// <param name=\"pname\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"params\">\r\n/// To be added.\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetError",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "ErrorCode"
              },
              "NativeName": "GetError",
              "Parameters": [],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return error information.\r\n/// </summary>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetFloatv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetFloatv",
              "Parameters": [
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "GetPName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "data",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"data\">To be added.</param>\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetFramebufferAttachmentParameteriv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetFramebufferAttachmentParameteriv",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "attachment",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferAttachment"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "FramebufferAttachmentParameterName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return attachment parameters of a framebuffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target framebuffer object. The symbolic constant must be GL_FRAMEBUFFER.\r\n/// </param>\r\n/// <param name=\"attachment\">\r\n/// Specifies the symbolic name of a framebuffer object attachment point. Accepted values are\n/// GL_COLOR_ATTACHMENT0, GL_DEPTH_ATTACHMENT, and GL_STENCIL_ATTACHMENT.\r\n/// </param>\r\n/// <param name=\"pname\">\r\n/// Specifies the symbolic name of a framebuffer object attachment parameter. Accepted values are\n/// GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,\n/// GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, and GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE.\r\n/// </param>\r\n/// <param name=\"params\">\r\n/// Returns the requested parameter.\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetGraphicsResetStatus",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "GraphicsResetStatus"
              },
              "NativeName": "GetGraphicsResetStatus",
              "Parameters": [],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetIntegerv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetIntegerv",
              "Parameters": [
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "GetPName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "data",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"data\">To be added.</param>\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetnUniformfv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetnUniformfv",
              "Parameters": [
                {
                  "Name": "program",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "bufSize",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"program\">To be added.</param>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"bufSize\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetnUniformiv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetnUniformiv",
              "Parameters": [
                {
                  "Name": "program",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "bufSize",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"program\">To be added.</param>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"bufSize\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetProgramiv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetProgramiv",
              "Parameters": [
                {
                  "Name": "program",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "ProgramPropertyARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return a parameter from a program object.\r\n/// </summary>\r\n/// <param name=\"program\">\r\n/// Specifies the program object to be queried.\r\n/// </param>\r\n/// <param name=\"pname\">\r\n/// Specifies the object parameter. Accepted symbolic names are GL_DELETE_STATUS, GL_LINK_STATUS,\n/// GL_VALIDATE_STATUS, GL_INFO_LOG_LENGTH, GL_ATTACHED_SHADERS, GL_ACTIVE_ATTRIBUTES,\n/// GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_MAX_LENGTH.\r\n/// </param>\r\n/// <param name=\"params\">\r\n/// Returns the requested object parameter.\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetRenderbufferParameteriv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetRenderbufferParameteriv",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "RenderbufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "RenderbufferParameterName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return parameters of a renderbuffer object.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target renderbuffer object. The symbolic constant must be GL_RENDERBUFFER.\r\n/// </param>\r\n/// <param name=\"pname\">\r\n/// Specifies the symbolic name of a renderbuffer object parameter. Accepted values are\n/// GL_RENDERBUFFER_WIDTH, GL_RENDERBUFFER_HEIGHT, GL_RENDERBUFFER_INTERNAL_FORMAT,\n/// GL_RENDERBUFFER_RED_SIZE, GL_RENDERBUFFER_GREEN_SIZE, GL_RENDERBUFFER_BLUE_SIZE,\n/// GL_RENDERBUFFER_ALPHA_SIZE, GL_RENDERBUFFER_DEPTH_SIZE, or GL_RENDERBUFFER_STENCIL_SIZE.\r\n/// </param>\r\n/// <param name=\"params\">\r\n/// Returns the requested parameter.\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetString",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "string"
              },
              "NativeName": "GetString",
              "Parameters": [
                {
                  "Name": "name",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StringName"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return a string describing the current GL connection.\r\n/// </summary>\r\n/// <param name=\"name\">\r\n/// Specifies a symbolic constant, one of GL_VENDOR, GL_RENDERER, GL_VERSION,\n/// GL_SHADING_LANGUAGE_VERSION, or GL_EXTENSIONS.\r\n/// </param>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetTexParameterfv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetTexParameterfv",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "GetTextureParameter"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"target\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetTexParameteriv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetTexParameteriv",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "GetTextureParameter"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"target\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetUniformLocation",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "int"
              },
              "NativeName": "GetUniformLocation",
              "Parameters": [
                {
                  "Name": "program",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "name",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "char"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return the location of a uniform variable.\r\n/// </summary>\r\n/// <param name=\"program\">\r\n/// Specifies the program object to be queried.\r\n/// </param>\r\n/// <param name=\"name\">\r\n/// Points to a null terminated string containing the name of the uniform variable whose location is to\n/// be queried.\r\n/// </param>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetVertexAttribfv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetVertexAttribfv",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "VertexAttribPropertyARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 4,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter contains 4 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetVertexAttribiv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetVertexAttribiv",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "VertexAttribPropertyARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 4,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter contains 4 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "GetVertexAttribPointerv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "GetVertexAttribPointerv",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "VertexAttribPointerPropertyARB"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pointer",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 2,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 1,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Return the address of the specified generic vertex attribute pointer.\r\n/// </summary>\r\n/// <param name=\"index\">\r\n/// Specifies the generic vertex attribute parameter to be returned.\r\n/// </param>\r\n/// <param name=\"pname\">\r\n/// Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be\n/// GL_VERTEX_ATTRIB_ARRAY_POINTER.\r\n/// </param>\r\n/// <param name=\"pointer\">\r\n/// Returns the pointer value.\r\n/// This parameter contains 1 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Hint",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Hint",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "HintTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "mode",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "HintMode"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify implementation-specific hints.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies a symbolic constant indicating the behavior to be controlled. GL_GENERATE_MIPMAP_HINT is\n/// accepted.\r\n/// </param>\r\n/// <param name=\"mode\">\r\n/// Specifies a symbolic constant indicating the desired behavior. GL_FASTEST, GL_NICEST, and\n/// GL_DONT_CARE are accepted.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "IsEnabled",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "bool"
              },
              "NativeName": "IsEnabled",
              "Parameters": [
                {
                  "Name": "cap",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "EnableCap"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Test whether a capability is enabled.\r\n/// </summary>\r\n/// <param name=\"cap\">\r\n/// Specifies a symbolic constant indicating a GL capability.\r\n/// </param>\r\n/// <returns>See summary.</returns>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "LineWidth",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "LineWidth",
              "Parameters": [
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify the width of rasterized lines.\r\n/// </summary>\r\n/// <param name=\"width\">\r\n/// Specifies the width of rasterized lines. The initial value is 1.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "PixelStorei",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "PixelStorei",
              "Parameters": [
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PixelStoreParameter"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "param",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set pixel storage modes.\r\n/// </summary>\r\n/// <param name=\"pname\">\r\n/// Specifies the symbolic name of the parameter to be set. One value affects the packing of pixel data\n/// into memory: GL_PACK_ALIGNMENT. The other affects the unpacking of pixel data from memory:\n/// GL_UNPACK_ALIGNMENT.\r\n/// </param>\r\n/// <param name=\"param\">\r\n/// Specifies the value that pname is set to.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "PolygonOffset",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "PolygonOffset",
              "Parameters": [
                {
                  "Name": "factor",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "units",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set the scale and units used to calculate depth values.\r\n/// </summary>\r\n/// <param name=\"factor\">\r\n/// Specifies a scale factor that is used to create a variable depth offset for each polygon. The\n/// initial value is 0.\r\n/// </param>\r\n/// <param name=\"units\">\r\n/// Is multiplied by an implementation-specific value to create a constant depth offset. The initial\n/// value is 0.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "ProgramBinary",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "ProgramBinary",
              "Parameters": [
                {
                  "Name": "program",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "binaryFormat",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "GLenum"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "binary",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                },
                {
                  "Name": "length",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"program\">To be added.</param>\r\n/// <param name=\"binaryFormat\">To be added.</param>\r\n/// <param name=\"binary\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n/// <param name=\"length\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "ReadnPixels",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "ReadnPixels",
              "Parameters": [
                {
                  "Name": "x",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "y",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "height",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "format",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PixelFormat"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "type",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PixelType"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "bufSize",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "data",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 2
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"x\">To be added.</param>\r\n/// <param name=\"y\">To be added.</param>\r\n/// <param name=\"width\">To be added.</param>\r\n/// <param name=\"height\">To be added.</param>\r\n/// <param name=\"format\">To be added.</param>\r\n/// <param name=\"type\">To be added.</param>\r\n/// <param name=\"bufSize\">To be added.</param>\r\n/// <param name=\"data\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "RenderbufferStorage",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "RenderbufferStorage",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "RenderbufferTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "internalformat",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "InternalFormat"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "height",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Create and initialize a renderbuffer object's data store.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the renderbuffer target. The symbolic constant must be GL_RENDERBUFFER.\r\n/// </param>\r\n/// <param name=\"internalformat\">\r\n/// Specifies the color-renderable, depth-renderable, or stencil-renderable format of the renderbuffer.\n/// Must be one of the following symbolic constants: GL_RGBA4, GL_RGB565, GL_RGB5_A1,\n/// GL_DEPTH_COMPONENT16, or GL_STENCIL_INDEX8.\r\n/// </param>\r\n/// <param name=\"width\">\r\n/// Specifies the width of the renderbuffer in pixels.\r\n/// </param>\r\n/// <param name=\"height\">\r\n/// Specifies the height of the renderbuffer in pixels.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "SampleCoverage",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "SampleCoverage",
              "Parameters": [
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "invert",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify multisample coverage parameters.\r\n/// </summary>\r\n/// <param name=\"value\">\r\n/// Specify a single floating-point sample coverage value. The value is clamped to the range 0 1 . The\n/// initial value is 1.0.\r\n/// </param>\r\n/// <param name=\"invert\">\r\n/// Specify a single boolean value representing if the coverage masks should be inverted. GL_TRUE and\n/// GL_FALSE are accepted. The initial value is GL_FALSE.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Scissor",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Scissor",
              "Parameters": [
                {
                  "Name": "x",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "y",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "height",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Define the scissor box.\r\n/// </summary>\r\n/// <param name=\"x\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"y\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"width\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"height\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "StencilFunc",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "StencilFunc",
              "Parameters": [
                {
                  "Name": "func",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilFunction"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "ref",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "mask",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set front and back function and reference value for stencil testing.\r\n/// </summary>\r\n/// <param name=\"func\">\r\n/// Specifies the test function. Eight symbolic constants are valid: GL_NEVER, GL_LESS, GL_LEQUAL,\n/// GL_GREATER, GL_GEQUAL, GL_EQUAL, GL_NOTEQUAL, and GL_ALWAYS. The initial value is GL_ALWAYS.\r\n/// </param>\r\n/// <param name=\"ref\">\r\n/// Specifies the reference value for the stencil test. ref is clamped to the range 0 2 n - 1 , where n\n/// is the number of bitplanes in the stencil buffer. The initial value is 0.\r\n/// </param>\r\n/// <param name=\"mask\">\r\n/// Specifies a mask that is ANDed with both the reference value and the stored stencil value when the\n/// test is done. The initial value is all 1's.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "StencilFuncSeparate",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "StencilFuncSeparate",
              "Parameters": [
                {
                  "Name": "face",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilFaceDirection"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "func",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilFunction"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "ref",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "mask",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set front and/or back function and reference value for stencil testing.\r\n/// </summary>\r\n/// <param name=\"face\">\r\n/// Specifies whether front and/or back stencil state is updated. Three symbolic constants are valid:\n/// GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.\r\n/// </param>\r\n/// <param name=\"func\">\r\n/// Specifies the test function. Eight symbolic constants are valid: GL_NEVER, GL_LESS, GL_LEQUAL,\n/// GL_GREATER, GL_GEQUAL, GL_EQUAL, GL_NOTEQUAL, and GL_ALWAYS. The initial value is GL_ALWAYS.\r\n/// </param>\r\n/// <param name=\"ref\">\r\n/// Specifies the reference value for the stencil test. ref is clamped to the range 0 2 n - 1 , where n\n/// is the number of bitplanes in the stencil buffer. The initial value is 0.\r\n/// </param>\r\n/// <param name=\"mask\">\r\n/// Specifies a mask that is ANDed with both the reference value and the stored stencil value when the\n/// test is done. The initial value is all 1's.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "StencilMask",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "StencilMask",
              "Parameters": [
                {
                  "Name": "mask",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Control the front and back writing of individual bits in the stencil planes.\r\n/// </summary>\r\n/// <param name=\"mask\">\r\n/// Specifies a bit mask to enable and disable writing of individual bits in the stencil planes.\n/// Initially, the mask is all 1's.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "StencilMaskSeparate",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "StencilMaskSeparate",
              "Parameters": [
                {
                  "Name": "face",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilFaceDirection"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "mask",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Control the front and/or back writing of individual bits in the stencil planes.\r\n/// </summary>\r\n/// <param name=\"face\">\r\n/// Specifies whether the front and/or back stencil writemask is updated. Three symbolic constants are\n/// valid: GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.\r\n/// </param>\r\n/// <param name=\"mask\">\r\n/// Specifies a bit mask to enable and disable writing of individual bits in the stencil planes.\n/// Initially, the mask is all 1's.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "StencilOp",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "StencilOp",
              "Parameters": [
                {
                  "Name": "fail",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilOp"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "zfail",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilOp"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "zpass",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilOp"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set front and back stencil test actions.\r\n/// </summary>\r\n/// <param name=\"fail\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"zfail\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"zpass\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "StencilOpSeparate",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "StencilOpSeparate",
              "Parameters": [
                {
                  "Name": "face",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilFaceDirection"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "sfail",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilOp"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "dpfail",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilOp"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "dppass",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "StencilOp"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set front and/or back stencil test actions.\r\n/// </summary>\r\n/// <param name=\"face\">\r\n/// Specifies whether front and/or back stencil state is updated. Three symbolic constants are valid:\n/// GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.\r\n/// </param>\r\n/// <param name=\"sfail\">\r\n/// Specifies the action to take when the stencil test fails. Eight symbolic constants are accepted:\n/// GL_KEEP, GL_ZERO, GL_REPLACE, GL_INCR, GL_INCR_WRAP, GL_DECR, GL_DECR_WRAP, and GL_INVERT. The\n/// initial value is GL_KEEP.\r\n/// </param>\r\n/// <param name=\"dpfail\">\r\n/// Specifies the stencil action when the stencil test passes, but the depth test fails. dpfail accepts\n/// the same symbolic constants as sfail. The initial value is GL_KEEP.\r\n/// </param>\r\n/// <param name=\"dppass\">\r\n/// Specifies the stencil action when both the stencil test and the depth test pass, or when the stencil\n/// test passes and either there is no depth buffer or depth testing is not enabled. dppass accepts the\n/// same symbolic constants as sfail. The initial value is GL_KEEP.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "TexParameterf",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "TexParameterf",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureParameterName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "param",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"target\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"param\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "TexParameterfv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "TexParameterfv",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureParameterName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"target\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "TexParameteri",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "TexParameteri",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureParameterName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "param",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"target\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"param\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "TexParameteriv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "TexParameteriv",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pname",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureParameterName"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "params",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "pname"
                    ]
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"target\">To be added.</param>\r\n/// <param name=\"pname\">To be added.</param>\r\n/// <param name=\"params\">To be added.</param>\r\n/// This parameter's element count is computed from pname.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "TexStorage2D",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "TexStorage2D",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "levels",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "internalformat",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "InternalFormat"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "height",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"target\">To be added.</param>\r\n/// <param name=\"levels\">To be added.</param>\r\n/// <param name=\"internalformat\">To be added.</param>\r\n/// <param name=\"width\">To be added.</param>\r\n/// <param name=\"height\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "TexSubImage2D",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "TexSubImage2D",
              "Parameters": [
                {
                  "Name": "target",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "TextureTarget"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "level",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "xoffset",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "yoffset",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "height",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "format",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PixelFormat"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "type",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "PixelType"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pixels",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "width",
                      "height",
                      "format",
                      "type"
                    ]
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Specify a two-dimensional texture subimage.\r\n/// </summary>\r\n/// <param name=\"target\">\r\n/// Specifies the target texture of the active texture unit. Must be GL_TEXTURE_2D,\n/// GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y,\n/// GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.\r\n/// </param>\r\n/// <param name=\"level\">\r\n/// Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap\n/// reduction image.\r\n/// </param>\r\n/// <param name=\"xoffset\">\r\n/// Specifies a texel offset in the x direction within the texture array.\r\n/// </param>\r\n/// <param name=\"yoffset\">\r\n/// Specifies a texel offset in the y direction within the texture array.\r\n/// </param>\r\n/// <param name=\"width\">\r\n/// Specifies the width of the texture subimage.\r\n/// </param>\r\n/// <param name=\"height\">\r\n/// Specifies the height of the texture subimage.\r\n/// </param>\r\n/// <param name=\"format\">\r\n/// Specifies the format of the pixel data. The following symbolic values are accepted: GL_ALPHA,\n/// GL_RGB, GL_RGBA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.\r\n/// </param>\r\n/// <param name=\"type\">\r\n/// Specifies the data type of the pixel data. The following symbolic values are accepted:\n/// GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_4_4_4_4, and GL_UNSIGNED_SHORT_5_5_5_1.\r\n/// </param>\r\n/// <param name=\"pixels\">\r\n/// To be added.\r\n/// This parameter's element count is computed from width, height, format, and type.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform1f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform1f",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform1fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform1fv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform1i",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform1i",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform1iv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform1iv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform2f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform2f",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v1",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n/// <param name=\"v1\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform2fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform2fv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform2i",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform2i",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v1",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n/// <param name=\"v1\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform2iv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform2iv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform3f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform3f",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v1",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v2",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n/// <param name=\"v1\">To be added.</param>\r\n/// <param name=\"v2\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform3fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform3fv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform3i",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform3i",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v1",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v2",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n/// <param name=\"v1\">To be added.</param>\r\n/// <param name=\"v2\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform3iv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform3iv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform4f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform4f",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v1",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v2",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v3",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n/// <param name=\"v1\">To be added.</param>\r\n/// <param name=\"v2\">To be added.</param>\r\n/// <param name=\"v3\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform4fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform4fv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform4i",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform4i",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v0",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v1",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v2",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v3",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"v0\">To be added.</param>\r\n/// <param name=\"v1\">To be added.</param>\r\n/// <param name=\"v2\">To be added.</param>\r\n/// <param name=\"v3\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Uniform4iv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Uniform4iv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "UniformMatrix2fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "UniformMatrix2fv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "transpose",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"transpose\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "UniformMatrix3fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "UniformMatrix3fv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "transpose",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"transpose\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "UniformMatrix4fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "UniformMatrix4fv",
              "Parameters": [
                {
                  "Name": "location",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "count",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "transpose",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "value",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"location\">To be added.</param>\r\n/// <param name=\"count\">To be added.</param>\r\n/// <param name=\"transpose\">To be added.</param>\r\n/// <param name=\"value\">To be added.</param>\r\n/// This parameter contains 0 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "UseProgram",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "UseProgram",
              "Parameters": [
                {
                  "Name": "program",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Install a program object as part of current rendering state.\r\n/// </summary>\r\n/// <param name=\"program\">\r\n/// Specifies the handle of the program object whose executables are to be used as part of current\n/// rendering state.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib1f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib1f",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "x",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"x\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib1fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib1fv",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 1,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"v\">To be added.</param>\r\n/// This parameter contains 1 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib2f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib2f",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "x",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "y",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"x\">To be added.</param>\r\n/// <param name=\"y\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib2fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib2fv",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 2,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"v\">To be added.</param>\r\n/// This parameter contains 2 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib3f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib3f",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "x",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "y",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "z",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"x\">To be added.</param>\r\n/// <param name=\"y\">To be added.</param>\r\n/// <param name=\"z\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib3fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib3fv",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 3,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"v\">To be added.</param>\r\n/// This parameter contains 3 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib4f",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib4f",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "x",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "y",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "z",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "w",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"x\">To be added.</param>\r\n/// <param name=\"y\">To be added.</param>\r\n/// <param name=\"z\">To be added.</param>\r\n/// <param name=\"w\">To be added.</param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttrib4fv",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttrib4fv",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "v",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "float"
                  },
                  "Count": {
                    "_count": 4,
                    "ComputedFromNames": []
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// To be added.\r\n/// </summary>\r\n/// <param name=\"index\">To be added.</param>\r\n/// <param name=\"v\">To be added.</param>\r\n/// This parameter contains 4 elements.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "VertexAttribPointer",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "VertexAttribPointer",
              "Parameters": [
                {
                  "Name": "index",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "size",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "type",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "VertexAttribPointerType"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "normalized",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "bool"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "stride",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "pointer",
                  "Type": {
                    "IsPointer": true,
                    "IsArray": false,
                    "IndirectionLevels": 1,
                    "ArrayDimensions": 0,
                    "Name": "void"
                  },
                  "Count": {
                    "_count": 0,
                    "ComputedFromNames": [
                      "size",
                      "type",
                      "stride"
                    ]
                  },
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Define an array of generic vertex attribute data.\r\n/// </summary>\r\n/// <param name=\"index\">\r\n/// Specifies the index of the generic vertex attribute to be modified.\r\n/// </param>\r\n/// <param name=\"size\">\r\n/// Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, or 4. The initial\n/// value is 4.\r\n/// </param>\r\n/// <param name=\"type\">\r\n/// Specifies the data type of each component in the array. Symbolic constants GL_BYTE,\n/// GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_FIXED, or GL_FLOAT are accepted. The initial value\n/// is GL_FLOAT.\r\n/// </param>\r\n/// <param name=\"normalized\">\r\n/// Specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as\n/// fixed-point values (GL_FALSE) when they are accessed.\r\n/// </param>\r\n/// <param name=\"stride\">\r\n/// Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic\n/// vertex attributes are understood to be tightly packed in the array. The initial value is 0.\r\n/// </param>\r\n/// <param name=\"pointer\">\r\n/// Specifies a pointer to the first component of the first generic vertex attribute in the array. The\n/// initial value is 0.\r\n/// This parameter's element count is computed from size, type, and stride.\r\n///\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            },
            {
              "Name": "Viewport",
              "IsUnsafe": false,
              "ReturnType": {
                "IsPointer": false,
                "IsArray": false,
                "IndirectionLevels": 0,
                "ArrayDimensions": 0,
                "Name": "void"
              },
              "NativeName": "Viewport",
              "Parameters": [
                {
                  "Name": "x",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "y",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "int"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "width",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                },
                {
                  "Name": "height",
                  "Type": {
                    "IsPointer": false,
                    "IsArray": false,
                    "IndirectionLevels": 0,
                    "ArrayDimensions": 0,
                    "Name": "uint"
                  },
                  "Count": null,
                  "Flow": 1
                }
              ],
              "GenericTypeParameters": [],
              "Attributes": [],
              "Doc": "/// <summary>\r\n/// Set the viewport.\r\n/// </summary>\r\n/// <param name=\"x\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"y\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"width\">\r\n/// To be added.\r\n/// </param>\r\n/// <param name=\"height\">\r\n/// To be added.\r\n/// </param>\r\n",
              "ExtensionName": "Core"
            }
          ],
          "Attributes": []
        }
      }
    }
  },
  "Namespace": "OpenToolkit.OpenGLSC",
  "ExtensionsNamespace": "OpenToolkit.OpenGLSC.Extensions",
  "OutputFolder": "OpenGL",
  "Name": "GLSC",
  "Version": null
}